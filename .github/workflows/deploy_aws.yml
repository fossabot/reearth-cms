name: deploy-aws
on:
  pull_request:
    branches: [ main ]

env:
  # server
  IMAGE: reearth/reearth-cms:nightly
  IMAGE_AWS: reearth-cms-test-server:latest
  # worker
  WORKER_IMAGE: reearth/reearth-cms-worker:nightly
  WORKER_IMAGE_AWS: reearth-cms-test-worker:latest

jobs:
  deploy_web:
    name: Deploy web to AWS
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*         
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ci_web.yml
          workflow_conclusion: success
          branch: main
          name: reearth-cms-web   
      - name: Extract artifact
        run: tar -xf reearth-cms-web.tar.gz
      - name: List files in current directory
        run: ls -la    
      - name: Deploy to S3
        run: |
          aws s3 sync ./reearth-cms-web s3://cms-amplify-frontend-test --delete --exclude "reearth_config.json"
      - name: Invalidate CloudFront Distribution
        run: |
          aws cloudfront create-invalidation --distribution-id E3MU1E25ERGR2X --paths "/*"

  deploy_server:
    name: Deploy server to AWS
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: docker pull, push to ECR
        run: |
          docker pull $IMAGE
          docker tag $IMAGE ${{ steps.login-ecr.outputs.registry }}/$IMAGE_AWS
          docker push ${{ steps.login-ecr.outputs.registry }}/$IMAGE_AWS

  deploy_worker:
    name: Deploy worker to AWS
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: docker pull, push to ECR
        run: |
          docker pull $WORKER_IMAGE
          docker tag $WORKER_IMAGE ${{ steps.login-ecr.outputs.registry }}/$WORKER_IMAGE_AWS
          docker push ${{ steps.login-ecr.outputs.registry }}/$WORKER_IMAGE_AWS
