import styled from "@emotion/styled";

import Button from "@reearth-cms/components/atoms/Button";
import Icon from "@reearth-cms/components/atoms/Icon";
import Modal from "@reearth-cms/components/atoms/Modal";
import Progress from "@reearth-cms/components/atoms/Progress";
import Steps from "@reearth-cms/components/atoms/Step";
import { Trans, useT } from "@reearth-cms/i18n";

import SelectSchemaFileModal from "./selectSchemaFileModal";

type Props = {
  visible: boolean;
  selectFileModalVisible: boolean;
  currentPage: number;
  nextPage: () => void;
  onSelectFile: () => void;
  onSelectSchemaFileModalClose: () => void;
  onModalClose: () => void;
};

const ImportSchemaModal: React.FC<Props> = ({
  visible,
  selectFileModalVisible,
  currentPage: currentImportSchemaModalPage,
  nextPage: nextSchemaImportPage,
  onSelectFile,
  onSelectSchemaFileModalClose,
  onModalClose: onSchemaImportModalClose,
}) => {
  const t = useT();

  const steps = [
    {
      title: "Select file",
      content: (
        <>
          <div>
            <h2>{t("Select file")}</h2>
            <AssetButton onClick={onSelectFile}>
              <Icon icon="plus" size={14} />
              <AssetButtonTitle>{t("Select")}</AssetButtonTitle>
            </AssetButton>
          </div>
          <div>
            <h2>{t("Notes")}</h2>
            <Trans
              i18nKey="importSchemaNotes"
              components={{
                l: <TemplateFileLink type="link">template file</TemplateFileLink>,
              }}
            />
          </div>
        </>
      ),
    },
    {
      title: "Schema preview",
      content: (
        <>
          <div>
            <h2>{t("Schema preview")}</h2>
            <p>
              {t(
                "Here is the schema generated by your file. Please confirm the type of each field. If it does not match your expectations, you can modify the field type.",
              )}
            </p>
          </div>
          <div>{t("content")}</div>
        </>
      ),
    },
    {
      title: "Importing",
      content: (
        <div
          style={{
            width: "100%",
            height: "100%",
            display: "flex",
            flexDirection: "column",
            alignItems: "center",
            justifyContent: "center",
          }}>
          <Progress type="circle" percent={50} />
          <p style={{ fontSize: 24 }}>{t("Importing...")}</p>
        </div>
      ),
    },
  ];

  const items = steps.map(item => ({ key: item.title, title: item.title }));

  return (
    <StyledModal
      title={t("Import Schema")}
      centered
      open={visible}
      onCancel={onSchemaImportModalClose}
      width="70vw"
      footer={
        <>
          {currentImportSchemaModalPage == 0 && (
            <Button type="primary" onClick={nextSchemaImportPage}>
              {t("Next")}
            </Button>
          )}
          {currentImportSchemaModalPage == 1 && (
            <Button type="primary" onClick={nextSchemaImportPage}>
              {t("Import schema")}
            </Button>
          )}
        </>
      }
      styles={{
        body: {
          height: "70vh",
        },
      }}>
      <>
        <Steps current={currentImportSchemaModalPage} items={items} style={{ display: "none" }} />
        <div className="steps-content" style={{ height: "100%" }}>
          {steps[currentImportSchemaModalPage].content}
        </div>
        <SelectSchemaFileModal
          visible={selectFileModalVisible}
          onModalClose={onSelectSchemaFileModalClose}
        />
      </>
    </StyledModal>
  );
};

export default ImportSchemaModal;

const StyledModal = styled(Modal)`
  .ant-pro-card-body {
    padding: 0;
    .ant-pro-table-list-toolbar {
      padding-left: 12px;
    }
  }
`;

const AssetButton = styled(Button)<{ enabled?: boolean }>`
  width: 100px;
  height: 100px;
  border: 1px dashed;
  border-color: ${({ enabled }) => (enabled ? "#d9d9d9" : "#00000040")};
  color: ${({ enabled }) => (enabled ? "#000000D9" : "#00000040")};
  padding: 0 5px;
  flex-flow: column;
`;

const AssetButtonTitle = styled.div`
  margin-top: 4px;
`;
const TemplateFileLink = styled(Button)`
  padding: 0;
`;
