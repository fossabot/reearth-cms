type Asset {
  id: ID!
  projectID: ID!
  createdAt: DateTime!
  createdBy: ID!
  fileName: String!
  size: FileSize!
  assetType: String!
  url: String!
}

input CreateAssetInput {
  projectID: ID!
  file: Upload!
}

input RemoveAssetInput {
  assetId: ID!
}

type CreateAssetPayload {
  asset: Asset!
}

type RemoveAssetPayload {
  assetId: ID!
}

extend type Query {
  getAsset(assetId: ID!): Asset!
}

extend type Mutation {
  createAsset(input: CreateAssetInput!): CreateAssetPayload
  removeAsset(input: RemoveAssetInput!): RemoveAssetPayload
}

type AssetFile {
  id: ID!
  assetID: ID!
  name: String!
  size: FileSize!
  contentType: String!
  uploadedAt: DateTime!
  uploadedBy: ID!
  children: [AssetFile!]
}

input CreateAssetFileInput {
  assetID: ID!
}

input RemoveAssetFileInput {
  assetFileId: ID!
}

type CreateAssetFilePayload {
  assetFile: AssetFile!
}

type RemoveAssetFilePayload {
  assetFileId: ID!
}

extend type Query {
  getAssetFile(assetFileId: ID!): AssetFile!
}

extend type Mutation {
  createAssetFile(input: CreateAssetFileInput!): CreateAssetFilePayload
  removeAssetFile(input: RemoveAssetFileInput!): RemoveAssetFilePayload
}